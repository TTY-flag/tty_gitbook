{"version":3,"sources":["../src/slicer.js"],"names":["getSliceRange","label","regExp","matches","exec","slice","start","end","startOrUndefined","parseInt","undefined","endOrUndefined","hasSliceRange","range","sliceCode","code","untrimmed","slitted","split","length","sliced","join","trim"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AACO,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,MAAMC,MAAM,GAAG,0CAAf;AACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,IAAP,CAAYH,KAAZ,CAAhB;;AACA,MAAIE,OAAO,KAAK,IAAhB,EAAsB;AAClB,WAAO,EAAP;AACH,GALgC,CAMjC;;;AACA,uBAAqBA,OAAO,CAACE,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAArB;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,GAAd;;AACA,MAAMC,gBAAgB,GAAGF,KAAK,KAAK,EAAV,GAAeG,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAAvB,GAAqCI,SAA9D;AACA,MAAMC,cAAc,GAAGJ,GAAG,KAAK,EAAR,GAAaE,QAAQ,CAACF,GAAD,EAAM,EAAN,CAArB,GAAiCG,SAAxD;AACA,SAAO,CAACF,gBAAD,EAAmBG,cAAnB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASC,aAAT,CAAuBX,KAAvB,EAA8B;AACjC,MAAMY,KAAK,GAAGb,aAAa,CAACC,KAAD,CAA3B;;AACA,8BAAqBY,KAArB;AAAA,MAAOP,KAAP;AAAA,MAAcC,GAAd;;AACA,SAAOD,KAAK,KAAKI,SAAV,IAAuBH,GAAG,KAAKG,SAAtC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASI,SAAT,CAAmBC,IAAnB,EAAyBT,KAAzB,EAAgCC,GAAhC,EAAqCS,SAArC,EAAgD;AACnD,MAAIV,KAAK,KAAKI,SAAV,IAAuBH,GAAG,KAAKG,SAAnC,EAA8C;AAC1C,WAAOK,IAAP;AACH;;AACD,MAAME,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAW,IAAX,CAAhB;;AACA,MAAIZ,KAAK,KAAKI,SAAd,EAAyB;AACrBJ,IAAAA,KAAK,GAAG,CAAR;AACH;;AACD,MAAIC,GAAG,KAAKG,SAAZ,EAAuB;AACnBH,IAAAA,GAAG,GAAGU,OAAO,CAACE,MAAd;AACH;;AACD,MAAMC,MAAM,GAAGH,OAAO,CAACZ,KAAR,CAAcC,KAAK,GAAG,CAAtB,EAAyBC,GAAzB,EAA8Bc,IAA9B,CAAmC,IAAnC,CAAf;AACA,SAAOL,SAAS,GAAGI,MAAH,GAAYA,MAAM,CAACE,IAAP,EAA5B;AACH","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n format: [import:<start-lineNumber>-<end-lineNumber>](path/to/file)\n lineNumber start with 1.\n\n Patterns:\n\n All: [import, hello-world.js](../src/hello-world.js)\n 1-2: [import:1-2, hello-world.js](../src/hello-world.js)\n 2-3: [import:2-3, hello-world.js](../src/hello-world.js)\n 2>=: [import:2-, hello-world.js](../src/hello-world.js)\n <=3: [import:-3, hello-world.js](../src/hello-world.js)\n */\n/**\n * get range from label\n * @param {string} label\n * @returns {number[]}\n */\nexport function getSliceRange(label) {\n    const regExp = /^(?:include|import):(\\d*)-(\\d*)[,\\s]?.*$/;\n    const matches = regExp.exec(label);\n    if (matches === null) {\n        return [];\n    }\n    // return [undefined, undefined] if not matched, else contains [all,start,end].\n    const [start, end] = matches.slice(1, 3);\n    const startOrUndefined = start !== \"\" ? parseInt(start, 10) : undefined;\n    const endOrUndefined = end !== \"\" ? parseInt(end, 10) : undefined;\n    return [startOrUndefined, endOrUndefined];\n}\n\n/**\n * has range command in the label\n * @param {string} label\n * @returns {boolean}\n */\nexport function hasSliceRange(label) {\n    const range = getSliceRange(label);\n    const [start, end] = range;\n    return start !== undefined || end !== undefined;\n}\n\n/**\n * slice {@link code} with {@link start} and {@link end}\n * @param {string} code\n * @param {number|undefined} [start]\n * @param {number|undefined} [end]\n * @param {boolean|undefined} [untrimmed]\n * @returns {string}\n */\nexport function sliceCode(code, start, end, untrimmed) {\n    if (start === undefined && end === undefined) {\n        return code;\n    }\n    const slitted = code.split(\"\\n\");\n    if (start === undefined) {\n        start = 1;\n    }\n    if (end === undefined) {\n        end = slitted.length;\n    }\n    const sliced = slitted.slice(start - 1, end).join(\"\\n\");\n    return untrimmed ? sliced : sliced.trim();\n}\n"],"file":"slicer.js"}